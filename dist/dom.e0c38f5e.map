{"version":3,"sources":["dom.js"],"names":["window","dom","find","selector","document","querySelectorAll","style","node","name","value","arguments","length","Object","object","key","each","nodeList","fn","i","call","div","console","log","divList","n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,GAAP,GAAW;AACPC,QADO,gBACFC,QADE,EACQ;AACX,eAAOC,SAASC,gBAAT,CAA0BF,QAA1B,CAAP;AACH,KAHM;AAIPG,SAJO,iBAIDC,IAJC,EAIIC,IAJJ,EAISC,KAJT,EAIgB;AACnB,YAAIC,UAAUC,MAAV,KAAqB,CAAzB,EAA4B;AACxBJ,iBAAKD,KAAL,CAAWE,IAAX,IAAmBC,KAAnB;AACH,SAFD,MAEO,IAAIC,UAAUC,MAAV,KAAqB,CAAzB,EAA4B;AAC/B,gBAAI,OAAOH,IAAP,KAAgB,QAApB,EAA8B;AAC1B,uBAAOD,KAAKD,KAAL,CAAWE,IAAX,CAAP;AACH,aAFD,MAEO,IAAIA,gBAAgBI,MAApB,EAA4B;AAC/B,oBAAMC,SAASL,IAAf;AACA,qBAAK,IAAIM,GAAT,IAAgBD,MAAhB,EAAwB;AACpBN,yBAAKD,KAAL,CAAWQ,GAAX,IAAgBD,OAAOC,GAAP,CAAhB;AACH;AACJ;AACJ;AACJ,KAjBM;AAkBPC,QAlBO,gBAkBFC,QAlBE,EAkBQC,EAlBR,EAkBY;AACf,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,SAASL,MAA7B,EAAqCO,GAArC,EAA0C;AACtCD,eAAGE,IAAH,CAAQ,IAAR,EAAaH,SAASE,CAAT,CAAb;AACH;AACJ;AAtBM,CAAX;;AAyBA,IAAME,MAAMnB,IAAIC,IAAJ,CAAS,YAAT,EAAuB,CAAvB,CAAZ;AACAmB,QAAQC,GAAR,CAAYF,GAAZ;;AAEAnB,IAAIK,KAAJ,CAAUc,GAAV,EAAe,OAAf,EAAwB,KAAxB;;AAEA,IAAMG,UAAUtB,IAAIC,IAAJ,CAAS,MAAT,CAAhB;AACAD,IAAIc,IAAJ,CAASQ,OAAT,EAAkB,UAACC,CAAD,EAAO;AACrBH,YAAQC,GAAR,CAAYE,CAAZ;AACH,CAFD","file":"dom.e0c38f5e.map","sourceRoot":"..\\src","sourcesContent":["window.dom={\r\n    find(selector) {\r\n        return document.querySelectorAll(selector)\r\n    },\r\n    style(node,name,value) {\r\n        if (arguments.length === 3) {\r\n            node.style[name] = value;\r\n        } else if (arguments.length === 2) {\r\n            if (typeof name === 'string') {\r\n                return node.style[name]\r\n            } else if (name instanceof Object) {\r\n                const object = name\r\n                for (let key in object) {\r\n                    node.style[key]=object[key]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    each(nodeList, fn) {\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            fn.call(null,nodeList[i])\r\n        }\r\n    }\r\n}\r\n\r\nconst div = dom.find('#test>.red')[0]\r\nconsole.log(div)\r\n\r\ndom.style(div, 'color', 'red')\r\n\r\nconst divList = dom.find('.red')\r\ndom.each(divList, (n) => {\r\n    console.log(n)\r\n})\r\n"]}